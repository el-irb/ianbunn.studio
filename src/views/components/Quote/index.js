import './quote.css'
import React, { Component } from 'react'
const { GoogleSpreadsheet } = require('google-spreadsheet');

let creds = {
    googleSheetId: '',
    pk: '',
    email: ''
}
if (process.env.REACT_APP_ENV) {
    creds = {
        googleSheetId: process.env.REACT_APP_GOOGLE_SHEET_ID,
        pk: process.env.REACT_APP_GOOGLE_PK,
        email: process.env.REACT_APP_GOOGLE_EMAIL
    }
} else if (process.env.AMPLIFY_ENV) {
    creds = {
        googleSheetId: process.env.AMPLIFY_GOOGLE_SHEET_ID,
        pk: process.env.AMPLIFY_GOOGLE_PK,
        email: process.env.AMPLIFY_GOOGLE_EMAIL
    }
}

let row, element;
export default class Quote extends Component {
    state = {}

    componentDidMount() {
        this.getSheetValues();
    }

    checkForRowNotOne = (row) => {
        if (row === 1) {
            return row + 1
        } else {
            return row
        }
    }
    getRandomRow = (rowCount) => {
        row = Math.floor(Math.random() * Math.floor(rowCount))
        this.checkForRowNotOne(row)
        return row
    }
    
    getSheetValues = async () => {
        try {
            element = 'Loading quote...'
            this.setState({
                Quote: element
            })
            const doc = new GoogleSpreadsheet(creds.googleSheetId);
            // Initialize Auth - see https://theoephraim.github.io/node-google-spreadsheet/#/getting-started/authentication
            await doc.useServiceAccountAuth({
                // env var values are copied from service account credentials generated by google
                // see "Authentication" section in docs for more info
                client_email: creds.email,
                private_key: creds.pk
            });
            await doc.loadInfo(); // loads document properties and worksheets
            const sheet = doc.sheetsByIndex[0];
            let randomNum = this.getRandomRow(sheet.rowCount);
            await sheet.loadCells(`A${randomNum}:B${randomNum}`); // loads a range of cells
            let quote = sheet.getCellByA1(`B${randomNum}`)
            let author = sheet.getCellByA1(`A${randomNum}`)
            element = `"${quote._rawData.formattedValue}" by ${author._rawData.formattedValue}`
            this.setState({
                Quote: element
            })
        } catch(err) {
            element = `"If talent's a kind of natural energy, doesn't it have to find an outlet?" by Haruki Murakami`
            this.setState({
                Quote: element
            })
        }
    }

    render() {
        return (
            <div>
                <h2 className={'quote'}>{this.state.Quote}</h2>
            </div>
        )
    }
    
}